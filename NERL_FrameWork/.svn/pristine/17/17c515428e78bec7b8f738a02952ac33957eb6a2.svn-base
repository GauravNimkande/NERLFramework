package NERL;

import java.awt.List;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.concurrent.TimeUnit;

import library.Exceldataconfig;
import library.Utility;
import withdrawal_pkg.PledgeeRedemption_main;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
public class Benf_To_Benf_Main {
	private String part2;
	private static WebDriver driver;
	private Utility utility;
	public Exceldataconfig config;
	private final static Logger logger = LoggerFactory.getLogger(Benf_To_Benf_Main.class);
	
	private Benf_To_Benf Benf_To_Ben=new Benf_To_Benf();
	
	@BeforeMethod()		
	public void Befour() throws InterruptedException, MalformedURLException {
		
		logger.info("Benf To Benf Test Cases Execution Started");
		
		System.setProperty("webdriver.chrome.driver", "D://chromedriver.exe");
		
		Thread.sleep(2000);
		
		/*TestFFonGrid Remote=new TestFFonGrid();
		driver=Remote.Grid();
	   */
		
		driver = new ChromeDriver();
		driver.get("https://nerltest.erepository.in/");
		driver.manage().window().maximize();
		 
		logger.info("Browser open Succesfully and Url is open");
		 utility = new Utility(driver);
}
    
	//++++++++++++++++++++++++EOT Initiation/Submit by RP Maker++++++++++++++++++++++++++++++++++++++++++++++++++

	@Test(priority=2,description="To verify if Rp Maker having Provision to initate/Submit EOT txn",dataProvider="Benf_To_Benf_Data")
    public void Benf_To_Benf_Submitt(String WHCode,String Comm_ID,String From_Benf,String To_RP_ID,String To_Benf,String ENWR_Type,String ENWR_Number,String User_ID_1,String Passw_1,String User_ID_2,String Passw_2,String User_ID_3,String Passw_3,String Trans_qt,int Record_no) throws InterruptedException, IOException {
		
		Benf_To_Ben.Benf_To_Benf_Submit(WHCode, Comm_ID, From_Benf, To_RP_ID, To_Benf, ENWR_Type, ENWR_Number, User_ID_1, Passw_1, User_ID_2, Passw_2, User_ID_3, Passw_3, Trans_qt, Record_no,driver);
		
		Benf_To_Ben.EOT_Approval_By_RpChecker_Sellerclient(WHCode, Comm_ID, From_Benf, To_RP_ID, To_Benf, ENWR_Type, ENWR_Number, User_ID_1, Passw_1, User_ID_2, Passw_2, User_ID_3, Passw_3, Trans_qt, Record_no,driver);
		
		Benf_To_Ben.EOT_Approval_By_RpChecker_Buyerclient(WHCode, Comm_ID, From_Benf, To_RP_ID, To_Benf, ENWR_Type, ENWR_Number, User_ID_1, Passw_1, User_ID_2, Passw_2, User_ID_3, Passw_3, Trans_qt, Record_no, driver);		
		
	
	   		driver.close();
	  			
		}
	
   
   
 @DataProvider(name="Benf_To_Benf_Data")
	public Object[][] Ben_passdata() throws IOException{
		System.out.println("Inside Ben_passdata()");
		//Exceldataconfig config1=new Exceldataconfig("C:/Users/gauravn/workspace/Test/TestData/TestData.xlsx",1);
		config=new Exceldataconfig();
		config.setExcelPath("D:/TestData.xlsx");
		//config.setExcelPath("C:/Users/gauravn/workspace/Test/TestData/TestData.xlsx");
		config.setSheetId(1);
		int rows=config.getrowcount(1);
		Object[][] data=new Object[rows-1][15];
		for(int i=1; i< rows;i++){
			data[i-1][0]=config.getdata(1, i, 0 );   //Warehouse Code
			data[i-1][1]=config.getdata(1, i, 1 );   //Commodity ID
			data[i-1][2]=config.getdata(1, i, 2 );   //From Beneficiary Id
			data[i-1][3]=config.getdata(1, i, 3 );   //To RP ID
			data[i-1][4]=config.getdata(1, i, 4 );   //To Beneficiary
			data[i-1][5]=config.getdata(1, i, 5 );   //ENWR Type
			data[i-1][6]=config.getdata(1, i, 6 );   //Enwr Number
			
			data[i-1][7]=config.getdata(1, i, 7 );  //User ID RP maker
			data[i-1][8]=config.getdata(1, i, 8 );  //Password RP maker
			data[i-1][9]=config.getdata(1, i, 9 );  //User ID RP checker Seler Client
			data[i-1][10]=config.getdata(1, i, 10 );//Password RP Checker
			data[i-1][11]=config.getdata(1, i, 11 );//User Id RP Checker Buyer Client
			data[i-1][12]=config.getdata(1, i, 12 );//Password RP Checker
			data[i-1][13]=config.getdata(1, i, 13 );//Transfer Qnt
			data[i-1][14]=i;
			
			System.out.println(data[i-1][0]+" - "+ data[i-1][1]+" - "+ data[i-1][2]+" - "+ data[i-1][3]+" - "+ data[i-1][4]+" - "+ data[i-1][5]+" - "+ data[i-1][6]+" - "+ data[i-1][7]+" - "+ data[i-1][8]+" - "+ data[i-1][9]+" - "+ data[i-1][10]+" - "+ data[i-1][11]+" - "+ data[i-1][12]);
		}
		return data;
	}
}