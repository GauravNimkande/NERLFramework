package NERL;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import Com.Wordpress.pages.Deposit;
import library.Exceldataconfig;
import library.Utility;

public class EWR_With_Deposit_Main {
	public Utility utility;
	public static WebDriver driver;
	public Exceldataconfig config;
	private final static Logger logger = LoggerFactory.getLogger( EWR_With_Deposit_Main.class);
	private static Deposit ENWR;
	public String ENWR_Number;
	public String EDP_No;
	private EWR_With_Deposite EWR=new EWR_With_Deposite();
	
	
	
	@BeforeMethod
	public void beforeMethod() throws InterruptedException, MalformedURLException {
		
					 System.out.println("Test Case Execution Started");
					 
					 System.setProperty("webdriver.chrome.driver", "D://chromedriver.exe");
					 
					 Thread.sleep(2000);
					/*
					 TestFFonGrid Remote=new TestFFonGrid();
						driver=Remote.Grid();*/
					 
					 
					 driver = new ChromeDriver();
					 
					// driver.get("https://interrepotest.erepository.in/");
					   
					 driver.get("https://nerltest.erepository.in/"); 
					 
					 driver.manage().window().maximize();
					 
					 ENWR=new Deposit(driver);		
					 
					 driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
					 
					 utility = new Utility(driver);
		  }
	

	
	@Test(priority=1,description="To verify Creation Of ENWR With Valid details",dataProvider="wordpressdata")
	public void EWR_creation_Approval(String WHCode,String Comm_ID,String Pack_Type,String Benf_Code,String No_Packs,String DepositorName,String Gross_Quantity,String Physical_Quantity,String Commodity_Rate,String Estimated_deposit,String Private_Marks,String Lot_Number,String Storage_Charges,String Handling_Charges,String Other_Charges,String Advance_Paid,String Remaining_Charges,String Depositor_Address,String VDD_Gross_Qty,String VDD_Net_Qty,String VDD_Number_of_Packs,String Ass_Sampleno,String Assayer_Methodology,String Actual_Grade,String Para_1,String Para_2,String Para_3,String Para_4,String WSP_maker,String WSP_Password1,String WSP_checker,String WSP_Password2,String Login_Assayer,String Ass_password,int Record_Number) throws InterruptedException, IOException
{
	

		utility.Login(WSP_maker, WSP_Password1);       
		
		logger.info("WSP maker Login Successfully");
		
		ENWR.Navigate_To_DepositPage();
		
		ENWR.EWR_Page(WHCode, Comm_ID, Pack_Type, Benf_Code, No_Packs, DepositorName, Gross_Quantity, Physical_Quantity, Commodity_Rate, Estimated_deposit, Private_Marks, Lot_Number, Storage_Charges, Handling_Charges, Other_Charges, Advance_Paid, Remaining_Charges, Depositor_Address, VDD_Gross_Qty, VDD_Net_Qty, VDD_Number_of_Packs, Ass_Sampleno, Assayer_Methodology, Actual_Grade, Para_1, Para_2, Para_3, Para_4, WSP_maker, WSP_Password1, WSP_checker, WSP_Password2, Login_Assayer, Ass_password, Record_Number);
	   
		logger.info("EWR Details Saved Successfully");
		
		EDP_No=ENWR.Transaction_Number();
		
		ENWR.Deposit_Page(WHCode, Comm_ID, Pack_Type, Benf_Code, No_Packs, DepositorName, Gross_Quantity, Physical_Quantity, Commodity_Rate, Estimated_deposit, Private_Marks, Lot_Number, Storage_Charges, Handling_Charges, Other_Charges, Advance_Paid, Remaining_Charges, Depositor_Address, VDD_Gross_Qty, VDD_Net_Qty, VDD_Number_of_Packs, Ass_Sampleno, Assayer_Methodology, Actual_Grade, Para_1, Para_2, Para_3, Para_4, WSP_maker, WSP_Password1, WSP_checker, WSP_Password2, Login_Assayer, Ass_password, Record_Number);
		
		logger.info("Deposit Details Saved Successfully");
		
		utility.pageScrollDown(NERLConstants.ADD_Vehicle_Details);
		
		ENWR.Vehicle_Deposit_Details(WHCode, Comm_ID, Pack_Type, Benf_Code, No_Packs, DepositorName, Gross_Quantity, Physical_Quantity, Commodity_Rate, Estimated_deposit, Private_Marks, Lot_Number, Storage_Charges, Handling_Charges, Other_Charges, Advance_Paid, Remaining_Charges, Depositor_Address, VDD_Gross_Qty, VDD_Net_Qty, VDD_Number_of_Packs, Ass_Sampleno, Assayer_Methodology, Actual_Grade, Para_1, Para_2, Para_3, Para_4, WSP_maker, WSP_Password1, WSP_checker, WSP_Password2, Login_Assayer, Ass_password, Record_Number);
		   
		logger.info("Vehicle Details Saved Successfully");
		
		ENWR.Assaying_Details_Page(WHCode, Comm_ID, Pack_Type, Benf_Code, No_Packs, DepositorName, Gross_Quantity, Physical_Quantity, Commodity_Rate, Estimated_deposit, Private_Marks, Lot_Number, Storage_Charges, Handling_Charges, Other_Charges, Advance_Paid, Remaining_Charges, Depositor_Address, VDD_Gross_Qty, VDD_Net_Qty, VDD_Number_of_Packs, Ass_Sampleno, Assayer_Methodology, Actual_Grade, Para_1, Para_2, Para_3, Para_4, WSP_maker, WSP_Password1, WSP_checker, WSP_Password2, Login_Assayer, Ass_password, Record_Number);
		       
		logger.info("Assaying Details Saved Successfully");
		
		utility.clickOnWebElement(NERLConstants.SUBMIT_EWR_BUTTON, driver);
		
		driver.switchTo().alert().accept();
		
		ENWR.Result_Check1(NERLConstants.Validation_msg, "EWR Transaction Details Submitted Successfully.");
		
		ENWR_Number=ENWR.EWR_Number();
		
		logger.info(ENWR_Number+" EWR Submited Successfully");
		
		//-------Write ENWR Into Benf to Benf Sheet----------------------
		utility.Write_EWR_No("D:/TestData.xlsx", ENWR_Number, 1, Record_Number, 6);
		
		//-------Write ENWR Into Pledge Initiation Sheet----------------------
		utility.Write_EWR_No("D:/TestData.xlsx", ENWR_Number, 2, Record_Number, 6);
		
		//-------Write ENWR Into Quantity Deduction Sheet----------------------
		utility.Write_EWR_No("D:/TestData.xlsx", ENWR_Number, 3, Record_Number, 3);
		
		//-------Write ENWR Into Pledgee Invoke Sheet----------------------
		utility.Write_EWR_No("D:/TestData.xlsx", ENWR_Number, 4, Record_Number, 3);
		
	    //-------Write ENWR Into Pledgee Redeem Sheet----------------------
		utility.Write_EWR_No("D:/TestData.xlsx", ENWR_Number, 5, Record_Number, 2);
		
		utility.logout();
		
		//Approve by WSP checker
		
		utility.Login(WSP_checker, WSP_Password2);
		
		utility.PendingTxn_Approval(EDP_No, NERLConstants.Approve_EWR_Button);
		
		driver.switchTo().alert().accept();
		
		ENWR.Result_Check1(NERLConstants.Validation_msg, "EWR Transaction Approved Successfully.");
		
		utility.logout();
		
		//approve by Assayer
		
		utility.Login(Login_Assayer, Ass_password);
		
		utility.PendingTxn_Approval(EDP_No, NERLConstants.Approve_EWR_Button);
		
		driver.switchTo().alert().accept();
			
		ENWR.Result_Check1(NERLConstants.Validation_msg, "EWR Transaction Approved Successfully.");
		
		utility.logout();
		
		//Approv by WSP checker final
		
		utility.Login(WSP_checker, WSP_Password2);
		
		utility.PendingTxn_Approval(EDP_No, NERLConstants.Approve_EWR_Button);
		
		driver.switchTo().alert().accept();
			
		ENWR.Result_Check1(NERLConstants.Validation_msg, "EWR Transaction Approved Successfully.");
		
		utility.logout();
	
    driver.close();
}

	
	
	@DataProvider(name="wordpressdata")
	public Object[][] passdata1() throws IOException{
		
		config=new Exceldataconfig();
		
		config.setExcelPath("D:/TestData.xlsx");
	
		config.setSheetId(0);
		int rows=config.getrowcount(0);
		Object[][] data=new Object[rows-1][35];
		for(int i=1; i< rows;i++){
			
			data[i-1][0]=config.getdata(0, i, 0);    //Warehouse Code
			data[i-1][1]=config.getdata(0, i, 1 );   //Commodity ID
			data[i-1][2]=config.getdata(0, i, 2 );   //Pack Type
			data[i-1][3]=config.getdata(0, i, 3 );   //Beneficiary Account Code
			data[i-1][4]=config.getdata(0, i, 4 );   //Number of Packs
			data[i-1][5]=config.getdata(0, i, 5 );   //Depositor Name
			data[i-1][6]=config.getdata(0, i, 6 );   //Gross Quantity(MT)
			data[i-1][7]=config.getdata(0, i, 7 );   //Physical Quantity(MT)
			data[i-1][8]=config.getdata(0, i, 8 );   //Commodity Rate
			data[i-1][9]=config.getdata(0, i, 9 );   //Estimated value at deposit
			data[i-1][10]=config.getdata(0, i, 10 ); //Private Marks
			data[i-1][11]=config.getdata(0, i, 11 ); //Lot/BIN Number
			data[i-1][12]=config.getdata(0, i, 12 ); //Storage Charges
			data[i-1][13]=config.getdata(0, i, 13 ); //Handling Charges
			data[i-1][14]=config.getdata(0, i, 14 ); //Other Charges
			data[i-1][15]=config.getdata(0, i, 15 ); //Advance Amount Paid
			data[i-1][16]=config.getdata(0, i, 16 ); //Remaining Charges
			data[i-1][17]=config.getdata(0, i, 17 ); //Depositor Address
			data[i-1][18]=config.getdata(0, i, 18 ); //VDD Gross Qty
			data[i-1][19]=config.getdata(0, i, 19 ); //VDD Net Qty
			data[i-1][20]=config.getdata(0, i, 20 ); //VDD Number Of Packs
			data[i-1][21]=config.getdata(0, i, 21 ); //Assaying Sample No
			data[i-1][22]=config.getdata(0, i, 22 ); //Assaying Assayer ID			
			data[i-1][23]=config.getdata(0, i, 23 ); //Assaying Actual Grade	
			
			data[i-1][24]=config.getdata(0, i, 24 ); //Parameter Detaill 1
			data[i-1][25]=config.getdata(0, i, 25 ); //Parameter detail 2
			data[i-1][26]=config.getdata(0, i, 26 ); //parameter detail 3
			data[i-1][27]=config.getdata(0, i, 27 ); //parameter detail 4
			
			data[i-1][28]=config.getdata(0, i, 28);    //userID(WSP Maker)
			data[i-1][29]=config.getdata(0, i, 29 );   //Password(WSP maker)
			
			data[i-1][30]=config.getdata(0, i, 30 );  //userID(WSP Checker)
			data[i-1][31]=config.getdata(0, i, 31 );  //password(WSP Checker)
			
			data[i-1][32]=config.getdata(0, i, 32);  //userID(Assayer)
			data[i-1][33]=config.getdata(0, i, 33);  //password(Assayer)
			data[i-1][34]=i;
			
			
			System.out.println(data[i-1][0]+" - " +data[i-1][1]+" - "+data[i-1][2]+data[i-1][2]+" - "+data[i-1][3]+" - "+data[i-1][4]+" - "+data[i-1][5]+" - "+data[i-1][6]+" - "+data[i-1][7]+" - "+data[i-1][8]+" - "+data[i-1][9]+" - "+data[i-1][10]+" - "+data[i-1][11]+" - "+data[i-1][12]+" - "+data[i-1][13]+" - "+data[i-1][14]+" - "+data[i-1][15]+" - "+data[i-1][16]+" - "+data[i-1][17]+" - "+data[i-1][18]+" - "+data[i-1][19]+" - "+data[i-1][20]+" - "+data[i-1][27]+" - "+data[i-1][28]+" - "+data[i-1][29]+" - "+data[i-1][30]+" - "+data[i-1][31]+" - "+data[i-1][32]+" - "+data[i-1][33]+" - "+data[i-1][34]);
		}
				 
	  return data;
	 
	}
	
}
