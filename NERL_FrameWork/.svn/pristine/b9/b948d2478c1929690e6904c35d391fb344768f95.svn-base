package withdrawal_pkg;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import library.Exceldataconfig;
import library.Utility;
public class Pledgeeinvoke_apprval {
	
	public String part2;
	public String part4;
	public String part3;
	public String part5;
	private static WebDriver driver;
	private Utility utility;
	public Exceldataconfig config;
	

	
@BeforeMethod

public void Befour() throws InterruptedException 
{
	System.out.println("Withdrawal Test Case Execution Started");
	
	System.setProperty("webdriver.chrome.driver", "D://chromedriver.exe");
    Thread.sleep(2000);

	driver = new ChromeDriver();
	
	driver.get("https://nerltest.erepository.in/");
	
    driver.manage().window().maximize();
    
    utility=new Utility(driver);

}
//###################################### TESTCASE 1 Submit by Maker ########################
 
  @Test 
	(priority=1,description ="To verify initation/submit for pledgee invoke transaction by Pledgee Maker",dataProvider="Withdrawal")
	
	public void Pledgee_creation(String Loan_account_no,String EPG_NO,String Beneficiary_Id,String EWR_NO, String Invoke_unit_no,String pledgee_M, String pledgee_pw,String Pledgee_checker,String Pledgee1_pw,int R_No) throws InterruptedException{
	  
     System.out.println("Step 1 -> Tes case -1 Initation/submit by maker");   

	 utility.Login1(pledgee_M, pledgee_pw); // Login by Pledgee maker(pledgee1001, Mumbai@123)

     driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS); 
         		      
     utility.clickOnWebElement(Withdrawal_Cons.Menu_Link, driver); 
         		   		
     utility.clickOnWebElement(Withdrawal_Cons.Navigation_Pledge,driver); // Navigation Pledge list
     
     utility.clickOnWebElement(Withdrawal_Cons.Pledge_invoke_link,driver); // Click on Pledge invoke link
     
     utility.clickOnWebElement(Withdrawal_Cons.Menu_trigger,driver); //Menu trigger
        		   	
     utility.clickOnWebElement(Withdrawal_Cons.Loan_account_no_toggle,driver); // Loan account no toggle   		   		
        		   		
     driver.findElement(By.xpath(Withdrawal_Cons.Loan_account_details_list)).sendKeys(Loan_account_no);   	
     
     driver.findElement(By.xpath(Withdrawal_Cons.Loan_account_details_list1)).sendKeys(EPG_NO);
     
     utility.clickOnWebElement(Withdrawal_Cons.Checkbox_loan_account,driver);
    
     Thread.sleep(2000);
        		   		
     driver.findElement(By.xpath(Withdrawal_Cons.To_Beneficiary_Id)).sendKeys(Beneficiary_Id);
        		   		
     utility.clickOnWebElement(Withdrawal_Cons.Fetch_button1,driver);  		
     
     utility.CaptureScreenshot(driver, "Featch EWR", R_No);
     
     Thread.sleep(2000);   		   		
     utility.scrolldown1();   		   		
       
     Thread.sleep(2000);
     driver.findElement(By.xpath(Withdrawal_Cons.enter_ewr)).sendKeys(EWR_NO);   //Enter EWR NO 		        
        		    	
     utility.clickOnWebElement(Withdrawal_Cons.select_checkbox_ewr,driver);   //Select checkbox4
     Thread.sleep(2000);    		        
     utility.scrolldown1();
     
     utility.clickOnWebElement(Withdrawal_Cons.select_button_pledgee,driver);   
     
     utility.CaptureScreenshot(driver, "Add EWR No", R_No);
     
     Thread.sleep(2000);
     //****************** Validation message **********************
     
     String Actual_Validation_1 = driver.findElement(By.cssSelector(Withdrawal_Cons.after_select_validation_msg)).getText();
     
     Assert.assertEquals(Actual_Validation_1,"Addition of EWR Successfully.");
     
     Thread.sleep(2000);
     
     utility.scrolldown1();
     
    //************************************************************
     
     utility.clickOnWebElement(Withdrawal_Cons.ewr_checkbox,driver); //Select check box for EWR NO
     Thread.sleep(2000);
     
     driver.findElement(By.xpath(Withdrawal_Cons.enter_invoke_unit)).clear(); // Clear invoke unit 
     
    //^^^^^^^^^^^^^^^^^^^^Action 1^^^^^^^^^^^^^^^^^^^ 
     Thread.sleep(2000);
     
     Actions action = new Actions(driver);
     
     action.moveToElement(driver.findElement(By.xpath("html/body/section/section/div/data/div/div[5]/div/div[1]/div/div[2]/div[1]/div/div[2]/div[3]/div[2]/div/div/div/div[4]/div/input"))).doubleClick().build().perform();
     
     Thread.sleep(2000); 
     driver.findElement(By.xpath("html/body/section/section/div/data/div/div[5]/div/div[1]/div/div[2]/div[1]/div/div[2]/div[3]/div[2]/div/div/div/div[4]/div[2]/form/input")).sendKeys(String.valueOf(Invoke_unit_no));
     				  
     utility.clickOnWebElement(Withdrawal_Cons.loan_amount_to_relese,driver); 
     
     utility.clickOnWebElement(Withdrawal_Cons.Click_save_button,driver); // Click on save button 
     
     utility.CaptureScreenshot(driver, "Save EWR NO", R_No);
     
     //*************************Validation Message***********************
     
     String Actual_Validation_2 = driver.findElement(By.cssSelector(Withdrawal_Cons.Validation_message_Approval)).getText();
     Assert.assertEquals(Actual_Validation_2,"EWR saved Successfully.");
     
   //********************************************************************
     
     utility.clickOnWebElement(Withdrawal_Cons.Click_submit_button_pledgee,driver);
      
     utility.CaptureScreenshot(driver, "Submit Pledgee invoke", R_No);
  //##############################################################
      				
      		String Invoke_Number =driver.findElement(By.xpath(Withdrawal_Cons.Invoke_no_capture)).getText();
      						
      	    String string = Invoke_Number; 	
      	    
      	    String[] parts = string.split(":-      ");
      			     
      	    this.part2 = parts[1]; 		
      			     
      		System.out.println("EPC NO is : " +part2);
      		
      		Thread.sleep(3000);
   
   //*****************************Validation Massage**********************
      		
     String Actual_Validation_3 = driver.findElement(By.cssSelector(Withdrawal_Cons.Validation_message_pledgee2)).getText();
    
   	 Assert.assertEquals(Actual_Validation_3,"Pledge Invoke submitted Successfully.");
   	 utility.CaptureScreenshot(driver, "EPC SUBMIT", R_No);
   	 utility.logout1();
   	 
 //################### APPROVED BY PLEDGEE CHECKER - PLEDGEE1002 ##################
   	 
     System.out.println("Step 2 -> Approved by Pledgee checker");
		
     utility.Login1(Pledgee_checker,Pledgee1_pw);
      
	 Thread.sleep(5000);
	 
     driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS); 
     
     utility.clickOnWebElement(Withdrawal_Cons.Click_toggle,driver); //Click on toggle for select pending transaction
     
     utility.clickOnWebElement(Withdrawal_Cons.Click_Pending_transaction,driver); //Click on Pending transaction
     Thread.sleep(2000); 
   
	     driver.findElement(By.xpath(Withdrawal_Cons.Txn_no)).sendKeys(part2); //Enter Transaction ref no.
	      
	     utility.clickOnWebElement(Withdrawal_Cons.Click_Txn_no,driver);   //click on DOW No from grid table 
	     
	     utility.clickOnWebElement(Withdrawal_Cons.Approve_button_pledgee,driver); //Click on Approve button'
	     
	    utility.CaptureScreenshot(driver, "Approve Pledgee", R_No);
	     
//**********************Validation Message************************************ 	     
	     
	     String actual_Validation_4=driver.findElement(By.cssSelector(Withdrawal_Cons.Validation_message_pledgee)).getText();
	     
     System.out.println("Actual validation message is " +actual_Validation_4);
     
             
      Assert.assertEquals(actual_Validation_4,"Pledge Invoke approved Successfully."); 
	     
	//*****************************************************************************     
      utility.logout1();
	      Thread.sleep(3000);
	      driver.close();
	      Thread.sleep(3000);
  }	
  
  
  @DataProvider(name="Withdrawal")
  
  public Object[][] passdata1() throws IOException{
	   
  System.out.println("Inside passdata()");
  
  config=new Exceldataconfig();

  config.setExcelPath("C:/Users/gauravn/workspace/Test/TestData/TestData.xlsx");

  config.setSheetId(4);
	
  int rows=config.getrowcount(4);
  
  Object[][] data=new Object[rows-1][10];
  
  for(int i=1; i< rows;i++){
		
		data[i-1][0]=config.getdata(4, i, 0);    //Loan Account Number
		data[i-1][1]=config.getdata(4, i, 1); 
		data[i-1][2]=config.getdata(4, i, 2 );   //To Beneficiary Id
		data[i-1][3]=config.getdata(4, i, 3 );   //EWR NO
		data[i-1][4]=config.getdata(4, i, 4 );   //Invoke unit no
		data[i-1][5]=config.getdata(4, i, 5 );	  //Loan Amount
		data[i-1][6]=config.getdata(4, i, 6 );    //rpledgee_maker
		data[i-1][7]=config.getdata(4, i, 7 );    //pledgee_pw
		data[i-1][8]=config.getdata(4, i, 8 );    //pledgee_ch
		data[i-1][9]=i;                           //Record no
		
 System.out.println(data[i-1][0]+" - " +data[i-1][1]+" - "+data[i-1][2]+" - " +data[i-1][3]+" - " +data[i-1][4]+" - " +data[i-1][5]+" - " +data[i-1][6]+" - " +data[i-1][7]+" - " +data[i-1][8]+" -  "+data[i-1][9]);
		
}
	
 System.out.println("data length:- "+data.length);

return data;                        
}


              
}