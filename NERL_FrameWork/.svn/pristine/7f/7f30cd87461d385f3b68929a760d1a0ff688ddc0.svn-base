package NERL;

import static org.testng.Assert.assertEquals;

import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import library.Exceldataconfig;
import library.Utility;

public class Pledgee_Initiation_Main {
	
	private static WebDriver driver;
	private Utility utility;
	public Exceldataconfig config;
    public String EPGno;
	@BeforeMethod		
	public void Befour() throws InterruptedException {
		System.out.println("Pledge Initiation Test Case Execution Started");
		System.setProperty("webdriver.chrome.driver", "D://chromedriver.exe");
		Thread.sleep(2000);
		  driver = new ChromeDriver();
	driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	  
	  // driver.get("https://interrepotest.erepository.in/");
		driver.get("https://nerltest.erepository.in/");
	
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
	
		
	driver.manage().window().maximize();
		
		 utility = new Utility(driver);

	}
	
	@AfterMethod
	public void After() {
		
		System.out.println("Pledge Initiation Test Case Execution Started");
		driver.close();
	
	}
 
	
	//++++++++++++++++++++++++EOT Initiation/Submit by RP Maker++++++++++++++++++++++++++++++++++++++++++++++++++
	
	@Test(priority=3,description="To verify if Rp maker having provision to Initiate Pledgee Initiation",dataProvider="PledgeeInintiation")

	public void Pledgee_Initiation_Submit(String Ware_Code,String Comm_Id,String Benf_Id,String Pledgee,String IFSC,String ACC_no,String ENWR_no,String Pledge_Qnt,String RPMaker,String RPMaker_password,String RPChecker,String RPchecker_password,String WSP_USER_ID,String WSP_Password,String Pledgee_maker,String PledgeeM_Pass,String Pledgee_checker1,String PledgeeC1_pass,String Pledgee_Checker2,String PledgeeC2_pass,String Loan_amt,int R_No) throws IOException {
		try {
		utility.Login(RPMaker,RPMaker_password);
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
		// Click on Menu Icon
		driver.findElement(By.xpath(NERLConstants.Menu_Icon)).click();
		
			Thread.sleep(2000);
		
		// Click on Pldgee Menu Dropdown
		driver.findElement(By.xpath(NERLConstants.Pledge_Menu)).click();
		driver.findElement(By.xpath(NERLConstants.Pledge_Initiation)).click();
		
		// Click on Back Button
		Thread.sleep(2000);
       driver.findElement(By.xpath(NERLConstants.Back_Button)).click();
	   
       //Warehouse button
       driver.findElement(By.xpath(NERLConstants.Warehouse)).click();
       
       Thread.sleep(2000);
	   driver.findElement(By.xpath(NERLConstants.Warehouse_code)).sendKeys(Ware_Code);
	   
	   //First record from dynamic table
	   driver.findElement(By.xpath(NERLConstants.Warehouse_code_firstrecord)).click();			
	   Thread.sleep(2000);
	   
	   //Commodity button
	   driver.findElement(By.xpath(NERLConstants.Commodity)).click();
	   driver.findElement(By.xpath(NERLConstants.Commodity_Code)).sendKeys(Comm_Id);
	   
	   //EWR Type
	   driver.findElement(By.xpath(NERLConstants.EWR_type2)).sendKeys("Y");
	   Thread.sleep(1000);
	   
	   //Select First Record
	   driver.findElement(By.xpath(NERLConstants.Commodity_code_firstrecord)).click();
	   Thread.sleep(2000);
	   
       //Beneficiary Button
	   driver.findElement(By.xpath(NERLConstants.BenficiaryButton)).click();
	   //Enter Beneficiary ID 
	   driver.findElement(By.xpath(NERLConstants.BenficiaryID)).sendKeys(Benf_Id);
	   //Select first record
	   driver.findElement(By.xpath(NERLConstants.Benefitiary_ID_FirstRecord)).click();
	   Thread.sleep(1000);
	   
	   //Pledgee
	   driver.findElement(By.xpath(NERLConstants.Pledgee_Button)).click();
	   driver.findElement(By.xpath(NERLConstants.Pledgee_Send)).sendKeys(Pledgee);
	   Thread.sleep(1000);
	   driver.findElement(By.xpath(NERLConstants.Pledgee_Select_FirstRecord)).click();
	   Thread.sleep(2000);
	   
	   //IFSC code
	   driver.findElement(By.xpath(NERLConstants.IFSC)).click();
	   Thread.sleep(1000);
	   driver.findElement(By.xpath(NERLConstants.IFCSEnter)).sendKeys(IFSC);
	   driver.findElement(By.xpath(NERLConstants.AgreementType)).sendKeys("TRIPARTITE");
	   driver.findElement(By.xpath(NERLConstants.IFSC_SelectFirstrecord)).click();
	   
	   Thread.sleep(2000);
	   //Is block for Auction "Yes"
	   driver.findElement(By.xpath("//*[@id='content']/div/data/div/div[3]/div/div[6]/div[5]/div/label[1]/input")).click();
	  //Is block for Auction "No"
	   //driver.findElement(By.xpath("//*[@id='content']/div/data/div/div[3]/div/div[6]/div[5]/div/label[2]/input")).click();
	   
	   //Select Repayment Date
	   driver.findElement(By.xpath(NERLConstants.Repayment_Date)).click();
	   driver.findElement(By.xpath(NERLConstants.Repayment_Date_next)).click();
	   Thread.sleep(2000);
	   driver.findElement(By.xpath(NERLConstants.Repayment_date_1m)).click();
	   
	   //Account Number
	   driver.findElement(By.xpath(NERLConstants.Account_Number)).sendKeys(ACC_no);
	   Thread.sleep(2000);
	   
	  // utility.pageScrollDown(NERLConstants.Fetch_Button);
	   //Click Fetch button
	   driver.findElement(By.xpath(NERLConstants.Fatch_button2)).click();
	   
	   utility.XY_PageScrollDown();
	   Thread.sleep(2000);
	   
	   //Send EWR number
	   driver.findElement(By.xpath(NERLConstants.EWR_ID)).sendKeys(ENWR_no);
	   Thread.sleep(2000);
	   driver.findElement(By.xpath(NERLConstants.EWR_ID_FirstRecord)).click();
	   //Click on Save button
	   driver.findElement(By.xpath(NERLConstants.Save_Button_Pledge)).click();
	   Thread.sleep(2000);
	   
	   //Pledgee Qnt double click send.
	   utility.DoubleClick(NERLConstants.pledgee_qnt_doubleclick);
	   driver.findElement(By.xpath(NERLConstants.pledgee_qnt_send)).sendKeys(Pledge_Qnt);
	   Thread.sleep(2000);
	   
	   //Save button
	   driver.findElement(By.xpath(NERLConstants.Save_Button_Selected_EWR)).click();
	   Thread.sleep(2000);
	   utility.XY_PageScrollUp();
	
	   
	   
	   Thread.sleep(2000);
	   //Submit button
	   driver.findElement(By.xpath(NERLConstants.Submit_Button_pledgee)).click();
	   Thread.sleep(3000);
	   
	   utility.XY_PageScrollUp();
	   utility.CaptureScreenshot(driver,"Pledge Initiation Submit", R_No);
	   
	   String Actual_Validation=driver.findElement(By.xpath(NERLConstants.Actual_Validatio)).getText();
	   System.out.println("RP Maker : "+Actual_Validation);
	   Assert.assertEquals(Actual_Validation,"Pledge initiation submitted successfully");
	   
	    String EPGno1=driver.findElement(By.xpath("//*[@id='content']/div/data/div/div[2]/div/table/tbody/tr[2]/td[1]")).getText();
		System.out.println(EPGno1);
		String string = EPGno1;
		String[] parts = string.split(":-      ");
		this.EPGno = parts[1];
		System.out.println("EPG number is : "+EPGno);
		
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
		 // Capture Pledge number EPG number
		   config.setExcelPath("C:/Users/gauravn/workspace/Test/TestData/TestData.xlsx");
			config.setSheetId(4);
	      	config.WriteExcel(EPGno, R_No,1);
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
	   
	   utility.logout();
	   
	   
	   //-----------------------------Approve by  RP Checker--------------------------------------------------------
	   
	   utility.Login(RPChecker,RPchecker_password);
	   // Click on pending txn button
  		utility.PendingTxn_Approval(EPGno,NERLConstants.Approve_Button_pledgee);
   		Thread.sleep(2000);
  		utility.CaptureScreenshot(driver, "Pledgee Initiation RPChecker Approval",R_No);
  		utility.logout();
  		
  		//--------------------------Approve by WSP Checker---------------------------------------------------------
  		 
  		utility.Login(WSP_USER_ID,WSP_Password);
		   // Click on pending txn button
		 utility.PendingTxn_Approval(EPGno, NERLConstants.Approve_pledgee_Wsp);
	  		Thread.sleep(2000);
	  		String Actual_pledgee_Validation=driver.findElement(By.xpath(NERLConstants.Validation_pledgee_On_Approve)).getText();
	  		System.out.println("WSP Checker : "+Actual_pledgee_Validation);
	  		Assert.assertEquals(Actual_pledgee_Validation, "Pledge approved successfully", "Error While Approve Pledgee Initiation By WSP checker");
	  		
	   		//Thread.sleep(2000);
	  		utility.CaptureScreenshot(driver, "Pledgee Initiation WSPChecker Approval",R_No);
	  		utility.logout();
	  		
	  	//--------------------------Approve by Pledgee maker---------------------------------------------------------	
				
	  		
	  		utility.Login(Pledgee_maker,PledgeeM_Pass);
			   // Click on pending txn button
			 
			 driver.findElement(By.xpath(NERLConstants.Pending_txn_navigation)).click();
		   		Thread.sleep(3000);
		   		driver.findElement(By.xpath(NERLConstants.Pending_tcn_navigation2)).click();
		   		System.out.println(EPGno);
		   		Thread.sleep(3000);
		   		//Put EDP number into search box
		   		driver.findElement(By.xpath(NERLConstants.EDP_no_Search_pending_txn)).sendKeys(EPGno);
		   		Thread.sleep(3000);
		   		//Click On EDP No
		   		driver.findElement(By.xpath(NERLConstants.EDP_ni_Click_FirstRecord)).click();
		       Thread.sleep(2000);
			    utility.XY_PageScrollDown();
			   
			    utility.DoubleClick(NERLConstants.Loan_amount_single_click);
			    driver.findElement(By.xpath(NERLConstants.Loan_amount_Send_amount)).sendKeys(Loan_amt);
			    Thread.sleep(2000);
			    utility.DoubleClick(NERLConstants.MV_by_pledgee);
			    driver.findElement(By.xpath(NERLConstants.MV_By_pledgee_Send)).sendKeys(Loan_amt);
			   
			    Thread.sleep(2000);

			    utility.XY_PageScrollUp();
			    
		       driver.findElement(By.xpath(NERLConstants.Approve_pledgee_button)).click(); 	
		       Thread.sleep(2000);
		  		String Actual_pledgeeM_Validation=driver.findElement(By.cssSelector(NERLConstants.Approve_By_Pledgee_validation)).getText();
		  		System.out.println("Pledgee Maker : "+Actual_pledgeeM_Validation);
		  		Assert.assertEquals(Actual_pledgeeM_Validation, "Pledge approved successfully", "Error While Approve Pledgee Initiation By Pledgee Maker");
		  		
		   		//Thread.sleep(2000);
		  		utility.CaptureScreenshot(driver, "Pledgee Initiation Pledgee Maker Approval",R_No);
		  		utility.logout();
	  		
	  	//-----------------------------------Approve by Pledgee Checker-----------------------------------------------------------	
	  		
		  		 utility.Login(Pledgee_checker1,PledgeeC1_pass);
				   // Click on pending txn button
				 
				 
				 utility.PendingTxn_Approval(EPGno, NERLConstants.Approve_pledgee_Wsp);
			  		Thread.sleep(2000);
			  		String Actual_pledgee_Validation1=driver.findElement(By.cssSelector(NERLConstants.Approve_By_Pledgee_validation)).getText();
			  		System.out.println("Pledgee Checker1 : "+Actual_pledgee_Validation1);
			  		Assert.assertEquals(Actual_pledgee_Validation1, "Pledge approved successfully", "Error While Approve Pledgee Initiation By Pledgee checker1");
			  		
			   		//Thread.sleep(2000);
			  		utility.CaptureScreenshot(driver, "Pledgee Initiation Pledgee checker1 Approval",R_No);
			  		utility.logout();
			  		
		//-----------------------------------Approve By Pledgee Verifier----------------------------------------------------------
			  		
			  		 utility.Login(Pledgee_Checker2,PledgeeC2_pass);
					   // Click on pending txn button
					 
					 
					 utility.PendingTxn_Approval(EPGno, NERLConstants.Approve_pledgee_Wsp);
				  		Thread.sleep(2000);
				  		String Actual_pledgee_Validation2=driver.findElement(By.cssSelector(NERLConstants.Approve_By_Pledgee_validation)).getText();
				  		System.out.println("Pledgee Checker1 : "+Actual_pledgee_Validation2);
				  		Assert.assertEquals(Actual_pledgee_Validation2, "Pledge approved successfully", "Error While Approve Pledgee Initiation By Pledgee checker1");
				  		
				   		//Thread.sleep(2000);
				  		utility.CaptureScreenshot(driver, "Pledgee Initiation Pledgee checker1 Approval",R_No);
				  		System.out.println("--------------------Pledgee Initiation COMPLETED Successfully-----------------------");
				  		utility.logout();
	  		
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	

	
	
	
	@DataProvider(name="PledgeeInintiation")
	public Object[][] Pledgee_passdata() throws IOException{
		System.out.println("Inside Pledgee Data provider()");
		//Exceldataconfig config1=new Exceldataconfig("C:/Users/gauravn/workspace/Test/TestData/TestData.xlsx",1);
		config=new Exceldataconfig();
		config.setExcelPath("C:/Users/gauravn/workspace/Test/TestData/TestData.xlsx");
		config.setSheetId(2);
		int rows=config.getrowcount(2);
		System.out.println("no Of Rows ="+rows);
		Object[][] data=new Object[rows-1][22];
		for(int i=1; i< rows;i++){
			
			data[i-1][0]=config.getdata(2, i, 0 );   //Warehouse Code
			data[i-1][1]=config.getdata(2, i, 1 );   //Commodity ID
			data[i-1][2]=config.getdata(2, i, 2 );   //Beneficiary Id
			data[i-1][3]=config.getdata(2, i, 3 );   //Pledge
			data[i-1][4]=config.getdata(2, i, 4 );   //IFSC
			data[i-1][5]=config.getdata(2, i, 5 );   //Account Number
			data[i-1][6]=config.getdata(2, i, 6 );   //Enwr Number
			data[i-1][7]=config.getdata(2, i, 7 );   //Pledge Qnt
			
			data[i-1][8]=config.getdata(2, i, 8 );   //RP Maker User ID
			data[i-1][9]=config.getdata(2, i, 9 );   //RP Maker Password
			data[i-1][10]=config.getdata(2, i, 10 ); //RP Checker User 
			data[i-1][11]=config.getdata(2, i, 11 ); //RP Checker Password
			data[i-1][12]=config.getdata(2, i, 12 ); //WSP UserID
			data[i-1][13]=config.getdata(2, i, 13 ); //WSP Password
			data[i-1][14]=config.getdata(2, i, 14 ); //Pledge Maker User ID
			data[i-1][15]=config.getdata(2, i, 15 ); //Pledge maker Password
			data[i-1][16]=config.getdata(2, i, 16 ); //pledge Checker1 User ID
			data[i-1][17]=config.getdata(2, i, 17 ); //Pledge Checker1 password
			data[i-1][18]=config.getdata(2, i, 18 ); //pledge Checker2 User ID
			data[i-1][19]=config.getdata(2, i, 19 ); //pledge Checker2 password
			data[i-1][20]=config.getdata(2, i, 20 ); //Loan Amount
			data[i-1][21]=i;
			
			
			
			
			System.out.println(data[i-1][0]+" - "+ data[i-1][1]+" - "+ data[i-1][2]+" - "+ data[i-1][3]+" - "+ data[i-1][4]+" - "+ data[i-1][5]+" - "+ data[i-1][6]+" - "+ data[i-1][7]+" - "+data[i-1][8]);
		}
		return data;
	}
}
